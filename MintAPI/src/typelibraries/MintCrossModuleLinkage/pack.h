/* This header file machine-generated by mktyplib.exe */
/* Interface to type library: MintCML */

#ifndef _MintCML_H_
#define _MintCML_H_

DEFINE_GUID(LIBID_MintCML,0x00000000L,0x7700,0x0045,0x7F,0xFF,0x7A,0xCD,0xC6,0x66,0x12,0x34);
#ifndef BEGIN_INTERFACE
#define BEGIN_INTERFACE
#endif

typedef void FAR* Any;

typedef void FAR* AnyArr;

typedef LPSTR String;

typedef LPWSTR WString;

typedef unsigned char Byte;

typedef long Long;

typedef unsigned long ULong;

typedef short Integer;

typedef int Boolean;

typedef CY Currency;

typedef CY Date;

typedef VARIANT Variant;

typedef struct MintDynData {
    long cbsz;
    long ArrPtr;
    long lpStrPtr_Name;
} MintDynData;

typedef struct MintFileHeader {
    long MintValidationKey;
    long FileType;
    long Version;
    long StructureBegin_PTR;
    long DataRecordLength;
    struct MintDynData RecordStructure;
} MintFileHeader;

typedef struct MintFileHeaderP2 {
    long cbsz;
    Byte CreationDate[8];
    Byte hshUsername[32];
} MintFileHeaderP2;

DEFINE_GUID(IID_IMintHelper,0x7F87FFFFL,0x7710,0x0045,0x7F,0xFF,0x7A,0xCD,0xC6,0x66,0x12,0x34);

/* Definition of interface: IMintHelper */
#undef INTERFACE
#define INTERFACE IMintHelper

DECLARE_INTERFACE_(IMintHelper, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IMintHelper methods */
    STDMETHOD_(void, memzero)(THIS_ long pDest, long lngSize) PURE;
    STDMETHOD_(long, ReadEAX)(THIS) PURE;
    STDMETHOD_(long, ReadFS)(THIS) PURE;
    STDMETHOD_(void, WriteFS)(THIS_ long fsValue) PURE;
    STDMETHOD_(long, ReadESP)(THIS) PURE;
    STDMETHOD_(void, WriteESP)(THIS_ long spValue) PURE;
    STDMETHOD_(long, ReadCalleeEBP)(THIS) PURE;
    STDMETHOD_(void, WriteCalleeEBP)(THIS_ long bpValue) PURE;
    STDMETHOD_(long, ReadCallerEBP)(THIS) PURE;
    STDMETHOD_(void, WriteCallerEBP)(THIS_ long bpValue) PURE;
    STDMETHOD_(long, ShiftLeft)(THIS_ long Value, long Count) PURE;
    STDMETHOD_(long, ShiftRight)(THIS_ long Value, long Count) PURE;
    STDMETHOD_(long, CalleeThis)(THIS) PURE;
    STDMETHOD_(long, CallerThis)(THIS) PURE;
    STDMETHOD_(long, GetIP)(THIS) PURE;
    STDMETHOD(Reserve)(THIS_ long Length) PURE;
    STDMETHOD_(long, Return)(THIS) PURE;
    STDMETHOD(CallInt32)(THIS_ long FuncPtr, long FAR* retVal) PURE;
    STDMETHOD(CallDbl)(THIS_ long FuncPtr, double FAR* retVal) PURE;
    STDMETHOD(CallInt64)(THIS_ long FuncPtr, Currency FAR* retVal) PURE;
    STDMETHOD(Call)(THIS_ long FuncPtr) PURE;
    STDMETHOD_(long, IncVar32)(THIS_ long FAR* int32Var) PURE;
    STDMETHOD_(long, VarInc32)(THIS_ long FAR* int32Var) PURE;
};

DEFINE_GUID(IID_IMintAPIWrapperInstance,0x0ACDC666L,0x0000,0x396F,0x00,0x0F,0x00,0xE0,0x7F,0xE4,0xDC,0xA7);

/* Definition of interface: IMintAPIWrapperInstance */
#undef INTERFACE
#define INTERFACE IMintAPIWrapperInstance

DECLARE_INTERFACE_(IMintAPIWrapperInstance, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IMintAPIWrapperInstance methods */
    STDMETHOD(GetCoreModule)(THIS_ long FAR* retVal) PURE;
    STDMETHOD(GetVersion)(THIS_ long FAR* retVal) PURE;
    STDMETHOD(Exit)(THIS) PURE;
};

/* Functions defined in module: KernelHelper */

#endif
